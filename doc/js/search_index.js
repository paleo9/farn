var search_data = {"index":{"searchIndex":["farnpageparser","qprice","row","new()","new()","new()","parse()","parse_file()","parse_row()","to_hash()","to_hash()","to_hash()","to_json()","to_s()","to_s()","to_s()"],"longSearchIndex":["farnpageparser","farnpageparser::qprice","farnpageparser::row","farnpageparser::new()","farnpageparser::qprice::new()","farnpageparser::row::new()","farnpageparser::qprice#parse()","farnpageparser#parse_file()","farnpageparser::row#parse_row()","farnpageparser#to_hash()","farnpageparser::qprice#to_hash()","farnpageparser::row#to_hash()","farnpageparser#to_json()","farnpageparser#to_s()","farnpageparser::qprice#to_s()","farnpageparser::row#to_s()"],"info":[["FarnPageParser","","FarnPageParser.html","","<p>Class FarnPageParser Parses and stores the information from the resulting\npage of a search performed …\n"],["FarnPageParser::QPrice","","FarnPageParser/QPrice.html","","<p>class QPrice stores a price-per-quantity for bulk orders.\n"],["FarnPageParser::Row","","FarnPageParser/Row.html","","<p>class Row Parse and store one row from the farn results table. Relevant\nsections begin with a <code>tr</code> column_name_ …\n"],["new","FarnPageParser","FarnPageParser.html#method-c-new","()","<p>Returns a new FarnPageParser. @rows and @properties_headings are empty\narrays; @headings are populated …\n"],["new","FarnPageParser::QPrice","FarnPageParser/QPrice.html#method-c-new","()","<p>Sets @quantity, @pounds and @pence to zero.\n"],["new","FarnPageParser::Row","FarnPageParser/Row.html#method-c-new","()","<p>Returns a new Row, properties and prices are empty arrays, other instance\nvariables are set to ‘empty’. …\n"],["parse","FarnPageParser::QPrice","FarnPageParser/QPrice.html#method-i-parse","(p)","<p>Extracts @quantity and @pounds and @pence. It looks for quantities like 25+\nand prices like that begin …\n"],["parse_file","FarnPageParser","FarnPageParser.html#method-i-parse_file","(filename)","<p>Populates the attributes using the supplied file. filename: The saved web\npage to be parsed.\n"],["parse_row","FarnPageParser::Row","FarnPageParser/Row.html#method-i-parse_row","(r)","<p>Populates the instance variables b extracting information from each row.\n"],["to_hash","FarnPageParser","FarnPageParser.html#method-i-to_hash","()","<p>Returns a hash of all the attributes; suitable for passing to to_json.\n"],["to_hash","FarnPageParser::QPrice","FarnPageParser/QPrice.html#method-i-to_hash","()","<p>Returns a hash to be used as part of a row’s to_hash method.\n"],["to_hash","FarnPageParser::Row","FarnPageParser/Row.html#method-i-to_hash","(prop_headings)","<p>Returns a hash of all the information for this row. By passing the\nproperties_headings from the containing …\n"],["to_json","FarnPageParser","FarnPageParser.html#method-i-to_json","()","<p>Returns a Json representation\n"],["to_s","FarnPageParser","FarnPageParser.html#method-i-to_s","()","<p>Returns a string of the all attributes.\n"],["to_s","FarnPageParser::QPrice","FarnPageParser/QPrice.html#method-i-to_s","()","<p>Returns an informative string of all its content.\n"],["to_s","FarnPageParser::Row","FarnPageParser/Row.html#method-i-to_s","()","<p>Returns a string of all the information for this row. It does not include\nthe property_headings, which …\n"]]}}